schema {
  query: Query
  mutation: Mutation
}

enum Cloud {
  AWS
  AZURE
  GCP
}

interface CloudSandbox {
  id: ID!
  assignedUntil: String!
  assignedSince: String!
  assignedTo: String!
  state: String!
}

type AwsSandbox implements CloudSandbox {
  id: ID!
  assignedUntil: String!
  assignedSince: String!
  assignedTo: String!
  state: String!
}

type AzureSandbox implements CloudSandbox {
  id: ID!
  assignedUntil: String!
  assignedSince: String!
  assignedTo: String!
  state: String!
}

union Sandbox = AzureSandbox | AwsSandbox

type ListSandboxes {
  sandboxes: [Sandbox]
}

type Query {
  listSandboxes(Email: String!): ListSandboxes
}

type Mutation {
  leaseSandBox(email: String!, leaseTime: String!, cloud: Cloud!): Sandbox!
}
